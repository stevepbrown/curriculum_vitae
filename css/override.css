/* main.css */

/*****************************************************

Responsive in jQuery Mobile

jQuery Mobile has always been designed to work within a responsive context and our docs and forms had a few responsive elements from the very start. All the widgets are built to be 100% flexible in width to fit easily inside any responsive layout system you choose to build.

Here is a checklist of RWD tips to keep in mind:

- Create a style override stylesheet and include it after the jQuery Mobile framework stylesheet. This will hold all your custom styles, tweaks to the default widgets and media queries.
- Start by writing the styles you want to see at the narrowest screen width (i.e. "mobile first"). These should be outside a media query. This mobile-first approach is efficient because you can lay down the core typography, colors and styles for mobile knowing that these tend to also be used for wider breakpoints.
- Choose the breakpoints based on your content, not a specific device. Since there are devices of every imaginable width, it's smarter to choose breakpoints based on how your content looks in your design system. As you re-size the window to greater widths, identify where your content hits a point where it could adapt to take advantage of a wider width.
- Write media queries' widths in ems, not pixels. This ensures the layout will adapt to font size changes in addition to screen widths. To calculate the width in ems, divide the target breakpoint in pixels (320px) by 16px (the default font size) to get the em-based width (20em).
- Use min-width breakpoints that build on top of the mobile styles. The first breakpoint applies layout adjustments on top of the standard mobile styles so these can be fairly lightweight. Additional min-width breakpoints can be added for even wider screens that each build on the previous breakpoint styles.
- To override framework styles only for smaller screens, use a max-width breakpoint instead. This allows you to constrain your style overrides to only apply below a certain screen width. Above this width, all the normal styles will apply so this is good for certain types of overrides.


******************************************************/



/* Mobile first! */

/*tags*/

* {
  text-overflow:inherit;
  }


dt {
    font-weight:bold;
      }

form h4 {
          text-align: center;
        }


/* --- Class ---s */

.mandatory::after {
                    content:"*";
                    color:red;
                    font-size:1.5em;
                  }


/* --- IDs --- */
#img-portrait {

      width:90vw;
      height:70vh;
      margin-left:auto;
      margin-right:auto;
    }


/*!Important*/
.hamburger{
            transform: scale(3,3) ;
            border-style: none;
            background-color: transparent !important;
            margin-right:3.2em !important;
            /*max-height: 80% !important;*/

          }


/*media queries*/

@media screen and (min-width: 400px) {

  /* --- MQ Tags --- */
  img {
        max-width:350px;
        max-height:415px;
        display:block;
        margin-left:auto;
        margin-right:auto;
      }
  /* --- MQ Class ---s */

  /* --- MQ IDs --- */
}
/*--------------------------------------------------------------------------------*/
  @media screen and (min-width: 600px)
   {
     /* --- MQ Tags --- */


    p {
        min-width: 5%;
        display:inline;
        position:absolute;
        margin-left: 1em;

      }

    /* --- MQ Class ---s */


    /* --- MQ IDs --- */


  }
/*--------------------------------------------------------------------------------*/

    /*@media screen and (min-width: 400px) {

      /* --- MQ Tags --- */

      /* --- MQ Class ---s */

      /* --- MQ IDs --- */

      /*!Important*/


/*--------------------------------------------------------------------------------*/


/* !IMPORTANT */
.hamburger{
            transform: scale(3,3) !important;
            border-style: none!important;
            background-color: transparent !important;
            margin-right:3.2em !important;
            height:80%!important;
          }
